<?xml version="1.0" encoding="UTF-8"?>
<project name="common">
    <target name="set-properties">
        <property file="build.properties"/>
        <condition property="do.build.javadoc">
            <istrue value="${build.javadoc}"/>
        </condition>
        <condition property="have.lib">
            <available file="${lib.dir}" type="dir"/>
        </condition>
        <path id="project.classpath">
            <fileset dir="${lib.dir}" includes="**/*.jar" erroronmissingdir="false"/>
        </path>
        <pathconvert property="classpath.for.manifest" pathsep=" " targetos="unix">
            <path refid="project.classpath"/>
            <file file="${jar.file}"/>
            <map from="${basedir}/" to=""/>
        </pathconvert>
    </target>

    <target name="clean" depends="set-properties">
        <delete dir="${build.dir}"/>
        <delete file="${bindist.file}"/>
        <delete file="${srcdist.file}"/>
        <delete file="${jar.file}"/>
        <delete dir="${javadoc.dir}"/>
    </target>

    <target name="compile" depends="set-properties">
        <mkdir dir="${production.classes.dir}"/>
        <javac srcdir="${production.src.dir}" destdir="${production.classes.dir}" source="1.5" target="1.5" classpathref="project.classpath"/>
    </target>

    <target name="compile-tests" depends="set-properties">
        <mkdir dir="${test.classes.dir}"/>
        <javac srcdir="${test.src.dir}" destdir="${test.classes.dir}" source="1.5" target="1.5">
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
            </classpath>
            <sourcepath location="${production.src.dir}"/>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit printsummary="true"
               logfailedtests="true"
               showoutput="true">
            <classpath>
                <fileset dir="${lib.dir}" includes="**/*.jar"/>
                <dirset dir="${production.classes.dir}"/>
                <dirset dir="${test.classes.dir}"/>
            </classpath>

            <batchtest haltonerror="true">
                <fileset dir="${test.classes.dir}" includes="**/*Test.class"/>
                <formatter type="plain" usefile="false"/>
            </batchtest>
        </junit>
    </target>

    <target name="make-jar" depends="compile">
        <manifest file="MANIFEST.MF">
            <attribute name="Main-Class" value="${project.main.class}"/>
            <attribute name="Class-Path" value="${classpath.for.manifest}"/>
        </manifest>
        <jar basedir="${production.classes.dir}"
             destfile="${jar.file}"
             includes="**/*"
             manifest="MANIFEST.MF"/>
    </target>

    <target name="javadoc" if="do.build.javadoc">
        <javadoc destdir="${javadoc.dir}">
            <sourcepath location="${production.src.dir}"/>
        </javadoc>
    </target>

    <target name="copy-javadoc-to-bindist" if="do.build.javadoc">
        <copy todir="${build.scratch.dir}/javadoc" >
            <fileset dir="${javadoc.dir}" includes="**/*"/>
        </copy>
    </target>

    <target name="copy-libs-to-bindist" if="have.lib">
        <mkdir dir="${build.scratch.dir}/${lib.dir}"/>
        <copy todir="${build.scratch.dir}/${lib.dir}">
            <fileset dir="${lib.dir}" includes="**/*"/>
        </copy>
    </target>

    <target name="make-bindist" depends="make-jar,javadoc">
        <delete dir="${build.scratch.dir}" failonerror="false"/>
        <mkdir dir="${build.scratch.dir}"/>
        <move todir="${build.scratch.dir}">
            <fileset file="${jar.file}"/>
        </move>
        <antcall target="copy-javadoc-to-bindist"/>
        <antcall target="copy-libs-to-bindist"/>
        <copy todir="${build.scratch.dir}" failonerror="false">
            <fileset dir="${script.src.dir}" includes="**/*"/>
        </copy>
        <chmod perm="+x" failifexecutionfails="false">
            <fileset dir="${build.scratch.dir}" includes="${script.executables}"/>
        </chmod>
        <zip basedir="${build.scratch.dir}" includes="**/*" destfile="${bindist.file}"/>
    </target>

    <target name="make-srcdist" depends="set-properties">
        <delete dir="${build.scratch.dir}" failonerror="false"/>
        <mkdir dir="${build.scratch.dir}"/>
        <mkdir dir="${build.scratch.dir}/lib"/>
        <copy todir="${build.scratch.dir}">
            <fileset dir=".">
                <include name="build-common.xml"/>
                <include name="build.xml"/>
                <include name="build.properties"/>
                <include name="${project.name}.iml"/>
                <include name=".idea/**/*"/>
                <include name="${lib.dir}/**/*"/>
                <include name="${production.src.dir}/**/*"/>
                <include name="${test.src.dir}/**/*"/>
            </fileset>
        </copy>
        <zip basedir="${build.scratch.dir}" includes="**/*" destfile="${srcdist.file}"/>
    </target>

    <target name="all" depends="compile,test,make-bindist,make-srcdist"/>
</project>